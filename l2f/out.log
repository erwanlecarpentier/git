In file included from /usr/include/c++/6.3.1/ctgmath:35:0,
                 from ./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:5,
                 from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:5,
                 from demo/main.cpp:3:
/usr/include/c++/6.3.1/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
 #error This file requires compiler and library support \
  ^~~~~
In file included from ./L2Fsim/simulation.hpp:4:0,
                 from demo/main.cpp:1:
./L2Fsim/flight_zone/flight_zone.hpp: In member function ‘L2Fsim::flight_zone& L2Fsim::flight_zone::ground(double, double, double&)’:
./L2Fsim/flight_zone/flight_zone.hpp:42:32: warning: unused parameter ‘x’ [-Wunused-parameter]
     flight_zone& ground(double x, double y, double &z)
                                ^
./L2Fsim/flight_zone/flight_zone.hpp:42:42: warning: unused parameter ‘y’ [-Wunused-parameter]
     flight_zone& ground(double x, double y, double &z)
                                          ^
In file included from ./L2Fsim/aircraft/aircraft.hpp:5:0,
                 from ./L2Fsim/simulation.hpp:5,
                 from demo/main.cpp:1:
./L2Fsim/aircraft/state.hpp: At global scope:
./L2Fsim/aircraft/state.hpp:18:24: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11
     virtual ~state() = default;
                        ^~~~~~~
In file included from ./L2Fsim/aircraft/aircraft.hpp:6:0,
                 from ./L2Fsim/simulation.hpp:5,
                 from demo/main.cpp:1:
./L2Fsim/aircraft/command.hpp:16:26: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11
     virtual ~command() = default;
                          ^~~~~~~
In file included from ./L2Fsim/simulation.hpp:5:0,
                 from demo/main.cpp:1:
./L2Fsim/aircraft/aircraft.hpp:25:27: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11
     virtual ~aircraft() = default;
                           ^~~~~~~
In file included from ./L2Fsim/stepper/stepper.hpp:6:0,
                 from ./L2Fsim/simulation.hpp:6,
                 from demo/main.cpp:1:
./L2Fsim/pilot/pilot.hpp:11:24: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11
     virtual ~pilot() = default;
                        ^~~~~~~
In file included from ./L2Fsim/simulation.hpp:6:0,
                 from demo/main.cpp:1:
./L2Fsim/stepper/stepper.hpp:12:26: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11
     virtual ~stepper() = default;
                          ^~~~~~~
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:5:0,
                 from demo/main.cpp:3:
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:78:25: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     state * duplicate() const override {
                         ^~~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:82:16: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     void print() override {
                ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:97:24: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     void clear_dynamic() override {
                        ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:111:31: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     void set_dynamic(state &_s) override {
                               ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:127:53: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     void add_to_dynamic(state &_s, const double coef) override {
                                                     ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:141:39: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     void apply_dynamic(const double dt) override {
                                       ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:156:37: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     void update_time(const double &t) override {
                                     ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:165:34: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     std::vector<double> get_save() override {
                                  ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp: In constructor ‘L2Fsim::beeler_glider_state::beeler_glider_state(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double)’:
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:68:27: error: ‘cos’ was not declared in this scope
         xdot = V * cos(khi) + cos(gamma);
                           ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:69:27: error: ‘sin’ was not declared in this scope
         ydot = V * sin(khi) + cos(gamma);
                           ^
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp: In member function ‘virtual void L2Fsim::beeler_glider_state::apply_dynamic(double)’:
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:147:30: error: ‘M_PI’ was not declared in this scope
         gamma = fmod(gamma,2*M_PI);
                              ^~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider_state.hpp:147:34: error: ‘fmod’ was not declared in this scope
         gamma = fmod(gamma,2*M_PI);
                                  ^
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:6:0,
                 from demo/main.cpp:3:
./L2Fsim/aircraft/beeler_glider/beeler_glider_command.hpp: At global scope:
./L2Fsim/aircraft/beeler_glider/beeler_glider_command.hpp:32:33: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     void set_command(command &_u) override {
                                 ^
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:7:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/quaternion.hpp: In member function ‘void L2Fsim::quaternion::fromRotationMatrix(const std::vector<double>&)’:
./L2Fsim/utils/quaternion.hpp:117:6: error: ‘copysign’ is not a member of ‘std’
  x = std::copysign(x, m[7] - m[5]);
      ^~~
./L2Fsim/utils/quaternion.hpp:117:6: note: suggested alternative:
In file included from /usr/include/features.h:368:0,
                 from /usr/include/c++/6.3.1/x86_64-redhat-linux/bits/os_defines.h:39,
                 from /usr/include/c++/6.3.1/x86_64-redhat-linux/bits/c++config.h:2414,
                 from /usr/include/c++/6.3.1/bits/stl_algobase.h:59,
                 from /usr/include/c++/6.3.1/vector:60,
                 from ./L2Fsim/flight_zone/flight_zone.hpp:4,
                 from ./L2Fsim/simulation.hpp:4,
                 from demo/main.cpp:1:
/usr/include/bits/mathcalls.h:221:1: note:   ‘copysign’
 __MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
 ^
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:7:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/quaternion.hpp:118:6: error: ‘copysign’ is not a member of ‘std’
  y = std::copysign(y, m[2] - m[6]);
      ^~~
./L2Fsim/utils/quaternion.hpp:118:6: note: suggested alternative:
In file included from /usr/include/features.h:368:0,
                 from /usr/include/c++/6.3.1/x86_64-redhat-linux/bits/os_defines.h:39,
                 from /usr/include/c++/6.3.1/x86_64-redhat-linux/bits/c++config.h:2414,
                 from /usr/include/c++/6.3.1/bits/stl_algobase.h:59,
                 from /usr/include/c++/6.3.1/vector:60,
                 from ./L2Fsim/flight_zone/flight_zone.hpp:4,
                 from ./L2Fsim/simulation.hpp:4,
                 from demo/main.cpp:1:
/usr/include/bits/mathcalls.h:221:1: note:   ‘copysign’
 __MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
 ^
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:7:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/quaternion.hpp:119:6: error: ‘copysign’ is not a member of ‘std’
  z = std::copysign(z, m[3] - m[1]);
      ^~~
./L2Fsim/utils/quaternion.hpp:119:6: note: suggested alternative:
In file included from /usr/include/features.h:368:0,
                 from /usr/include/c++/6.3.1/x86_64-redhat-linux/bits/os_defines.h:39,
                 from /usr/include/c++/6.3.1/x86_64-redhat-linux/bits/c++config.h:2414,
                 from /usr/include/c++/6.3.1/bits/stl_algobase.h:59,
                 from /usr/include/c++/6.3.1/vector:60,
                 from ./L2Fsim/flight_zone/flight_zone.hpp:4,
                 from ./L2Fsim/simulation.hpp:4,
                 from demo/main.cpp:1:
/usr/include/bits/mathcalls.h:221:1: note:   ‘copysign’
 __MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));
 ^
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:7:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/quaternion.hpp: In member function ‘void L2Fsim::quaternion::rotateVector(std::vector<double>&) const’:
./L2Fsim/utils/quaternion.hpp:162:22: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
  std::vector<double>({v1,v2,v3}).swap(v);
                      ^
./L2Fsim/utils/quaternion.hpp:162:32: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
  std::vector<double>({v1,v2,v3}).swap(v);
                                ^
./L2Fsim/utils/quaternion.hpp:162:32: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
./L2Fsim/utils/quaternion.hpp:162:32: error: no matching function for call to ‘std::vector<double>::vector(<brace-enclosed initializer list>)’
In file included from /usr/include/c++/6.3.1/vector:64:0,
                 from ./L2Fsim/flight_zone/flight_zone.hpp:4,
                 from ./L2Fsim/simulation.hpp:4,
                 from demo/main.cpp:1:
/usr/include/c++/6.3.1/bits/stl_vector.h:409:9: note: candidate: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)
         vector(_InputIterator __first, _InputIterator __last,
         ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:409:9: note:   template argument deduction/substitution failed:
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:7:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/quaternion.hpp:162:32: note:   candidate expects 3 arguments, 1 provided
  std::vector<double>({v1,v2,v3}).swap(v);
                                ^
In file included from /usr/include/c++/6.3.1/vector:64:0,
                 from ./L2Fsim/flight_zone/flight_zone.hpp:4,
                 from ./L2Fsim/simulation.hpp:4,
                 from demo/main.cpp:1:
/usr/include/c++/6.3.1/bits/stl_vector.h:320:7: note: candidate: std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = double; _Alloc = std::allocator<double>]
       vector(const vector& __x)
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:320:7: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const std::vector<double>&’
/usr/include/c++/6.3.1/bits/stl_vector.h:305:7: note: candidate: std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const value_type&, const allocator_type&) [with _Tp = double; _Alloc = std::allocator<double>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = double; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<double>]
       vector(size_type __n, const value_type& __value = value_type(),
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:305:7: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<double>::size_type {aka long unsigned int}’
/usr/include/c++/6.3.1/bits/stl_vector.h:266:7: note: candidate: std::vector<_Tp, _Alloc>::vector(const allocator_type&) [with _Tp = double; _Alloc = std::allocator<double>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<double>]
       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:266:7: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const allocator_type& {aka const std::allocator<double>&}’
/usr/include/c++/6.3.1/bits/stl_vector.h:255:7: note: candidate: std::vector<_Tp, _Alloc>::vector() [with _Tp = double; _Alloc = std::allocator<double>]
       vector()
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:255:7: note:   candidate expects 0 arguments, 1 provided
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:7:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/quaternion.hpp: In member function ‘void L2Fsim::quaternion::rotationAxis(std::vector<double>&) const’:
./L2Fsim/utils/quaternion.hpp:191:22: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
  std::vector<double>({x,y,z}).swap(v);
                      ^
./L2Fsim/utils/quaternion.hpp:191:29: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
  std::vector<double>({x,y,z}).swap(v);
                             ^
./L2Fsim/utils/quaternion.hpp:191:29: warning: extended initializer lists only available with -std=c++11 or -std=gnu++11
./L2Fsim/utils/quaternion.hpp:191:29: error: no matching function for call to ‘std::vector<double>::vector(<brace-enclosed initializer list>)’
In file included from /usr/include/c++/6.3.1/vector:64:0,
                 from ./L2Fsim/flight_zone/flight_zone.hpp:4,
                 from ./L2Fsim/simulation.hpp:4,
                 from demo/main.cpp:1:
/usr/include/c++/6.3.1/bits/stl_vector.h:409:9: note: candidate: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)
         vector(_InputIterator __first, _InputIterator __last,
         ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:409:9: note:   template argument deduction/substitution failed:
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:7:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/quaternion.hpp:191:29: note:   candidate expects 3 arguments, 1 provided
  std::vector<double>({x,y,z}).swap(v);
                             ^
In file included from /usr/include/c++/6.3.1/vector:64:0,
                 from ./L2Fsim/flight_zone/flight_zone.hpp:4,
                 from ./L2Fsim/simulation.hpp:4,
                 from demo/main.cpp:1:
/usr/include/c++/6.3.1/bits/stl_vector.h:320:7: note: candidate: std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = double; _Alloc = std::allocator<double>]
       vector(const vector& __x)
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:320:7: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const std::vector<double>&’
/usr/include/c++/6.3.1/bits/stl_vector.h:305:7: note: candidate: std::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const value_type&, const allocator_type&) [with _Tp = double; _Alloc = std::allocator<double>; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = double; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<double>]
       vector(size_type __n, const value_type& __value = value_type(),
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:305:7: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘std::vector<double>::size_type {aka long unsigned int}’
/usr/include/c++/6.3.1/bits/stl_vector.h:266:7: note: candidate: std::vector<_Tp, _Alloc>::vector(const allocator_type&) [with _Tp = double; _Alloc = std::allocator<double>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<double>]
       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:266:7: note:   no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const allocator_type& {aka const std::allocator<double>&}’
/usr/include/c++/6.3.1/bits/stl_vector.h:255:7: note: candidate: std::vector<_Tp, _Alloc>::vector() [with _Tp = double; _Alloc = std::allocator<double>]
       vector()
       ^~~~~~
/usr/include/c++/6.3.1/bits/stl_vector.h:255:7: note:   candidate expects 0 arguments, 1 provided
In file included from ./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:8:0,
                 from demo/main.cpp:3:
./L2Fsim/utils/utils.hpp: In function ‘void L2Fsim::save_vector(const std::vector<content_type>&, const string&, std::ios_base::openmode)’:
./L2Fsim/utils/utils.hpp:127:27: error: no matching function for call to ‘std::basic_ofstream<char>::open(const string&, std::ios_base::openmode&)’
     outfile.open(path,mode);
                           ^
In file included from ./L2Fsim/aircraft/state.hpp:4:0,
                 from ./L2Fsim/aircraft/aircraft.hpp:5,
                 from ./L2Fsim/simulation.hpp:5,
                 from demo/main.cpp:1:
/usr/include/c++/6.3.1/fstream:799:7: note: candidate: void std::basic_ofstream<_CharT, _Traits>::open(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode]
       open(const char* __s,
       ^~~~
/usr/include/c++/6.3.1/fstream:799:7: note:   no known conversion for argument 1 from ‘const string {aka const std::__cxx11::basic_string<char>}’ to ‘const char*’
In file included from demo/main.cpp:3:0:
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp: At global scope:
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:70:22: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double ARv = 0.5*aspect_ratio;
                      ^~~~~~~~~~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:72:22: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double lt = 0.28*wingspan;
                      ^~~~~~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:73:17: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Vh = 0.4;
                 ^~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:74:17: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Vv = 0.02;
                 ^~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:75:35: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double c_ = 1.03 * wingspan / aspect_ratio;
                                   ^~~~~~~~~~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:76:38: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double S = wingspan * wingspan / aspect_ratio;
                                      ^~~~~~~~~~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:78:37: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Sv = Vv * wingspan * S / lt;
                                     ^~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:79:16: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double e = 0.95;
                ^~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:81:31: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double a0 = 0.1*(180./M_PI);
                               ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:82:36: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double alpha0 = -2.5*(M_PI/180.);
                                    ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:83:18: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Cd0 = 0.01;
                  ^~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:84:18: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Cdl = 0.05;
                  ^~~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:85:20: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Clmin = 0.4;
                    ^~~
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:86:54: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Cl_alpha = a0/(1.+a0/(M_PI*e*aspect_ratio));
                                                      ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:87:55: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double Cc_beta = (a0/(1.+a0/(M_PI*e*ARv))) * (Sv/S);
                                                       ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:114:23: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     state & get_state() override {return s;}
                       ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:123:27: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     command & get_command() override {return u;}
                           ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:131:35: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     double get_distance_to_center() override {
                                   ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:136:30: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     aircraft & apply_command() override {
                              ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:150:79: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     aircraft & update_state_dynamic(flight_zone &fz, const double t, state &_s) override {
                                                                               ^
./L2Fsim/aircraft/beeler_glider/beeler_glider.hpp:176:28: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     aircraft & is_in_model() override {
                            ^
In file included from demo/main.cpp:7:0:
./L2Fsim/pilot/passive_pilot.hpp:38:43: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  pilot & operator()(state &_s, command &_u) override
                                           ^
./L2Fsim/pilot/passive_pilot.hpp:53:48: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     pilot & out_of_range(state &_s, command &_u) override
                                                ^
./L2Fsim/pilot/passive_pilot.hpp: In member function ‘virtual L2Fsim::pilot& L2Fsim::passive_pilot::operator()(L2Fsim::state&, L2Fsim::command&)’:
./L2Fsim/pilot/passive_pilot.hpp:38:28: warning: unused parameter ‘_s’ [-Wunused-parameter]
  pilot & operator()(state &_s, command &_u) override
                            ^~
In file included from demo/main.cpp:8:0:
./L2Fsim/pilot/heuristic_pilot.hpp: At global scope:
./L2Fsim/pilot/heuristic_pilot.hpp:36:43: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  pilot & operator()(state &_s, command &_u) override
                                           ^
./L2Fsim/pilot/heuristic_pilot.hpp:58:48: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     pilot & out_of_range(state &_s, command &_u) override
                                                ^
In file included from demo/main.cpp:9:0:
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:188:43: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  pilot & operator()(state &_s, command &_a) override
                                           ^
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:212:48: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     pilot & out_of_range(state &_s, command &_a) override
                                                ^
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:21:7: error: looser throw specifier for ‘virtual L2Fsim::q_learning_pilot::~q_learning_pilot()’
 class q_learning_pilot : public pilot {
       ^~~~~~~~~~~~~~~~
In file included from ./L2Fsim/stepper/stepper.hpp:6:0,
                 from ./L2Fsim/simulation.hpp:6,
                 from demo/main.cpp:1:
./L2Fsim/pilot/pilot.hpp:11:13: error:   overriding ‘virtual L2Fsim::pilot::~pilot() throw ()’
     virtual ~pilot() = default;
             ^
In file included from demo/main.cpp:9:0:
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp: In member function ‘void L2Fsim::q_learning_pilot::epsilon_greedy_policy(const L2Fsim::beeler_glider_state&, L2Fsim::beeler_glider_command&)’:
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:119:9: error: ‘default_random_engine’ is not a member of ‘std’
         std::default_random_engine generator;
         ^~~
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:120:9: error: ‘uniform_real_distribution’ is not a member of ‘std’
         std::uniform_real_distribution<double> distribution(0.0,1.0);
         ^~~
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:120:40: error: expected primary-expression before ‘double’
         std::uniform_real_distribution<double> distribution(0.0,1.0);
                                        ^~~~~~
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:131:38: error: ‘generator’ was not declared in this scope
         double number = distribution(generator);
                                      ^~~~~~~~~
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:131:47: error: ‘distribution’ was not declared in this scope
         double number = distribution(generator);
                                               ^
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp: In member function ‘void L2Fsim::q_learning_pilot::get_reward(const L2Fsim::beeler_glider_state&, double&)’:
./L2Fsim/pilot/q_learning/q_learning_pilot.hpp:164:48: warning: unused parameter ‘s’ [-Wunused-parameter]
     void get_reward(const beeler_glider_state &s, double &reward)
                                                ^
In file included from ./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:8:0,
                 from demo/main.cpp:10:
./L2Fsim/pilot/mcts/b03_node.hpp: In constructor ‘L2Fsim::b03_node::b03_node(L2Fsim::beeler_glider_state, std::vector<L2Fsim::beeler_glider_command>, double, unsigned int, unsigned int)’:
./L2Fsim/pilot/mcts/b03_node.hpp:38:40: warning: ‘L2Fsim::b03_node::expendable_actions’ will be initialized after [-Wreorder]
     std::vector<beeler_glider_command> expendable_actions;
                                        ^~~~~~~~~~~~~~~~~~
./L2Fsim/pilot/mcts/b03_node.hpp:34:12: warning:   ‘double L2Fsim::b03_node::cumulative_reward’ [-Wreorder]
     double cumulative_reward;
            ^~~~~~~~~~~~~~~~~
./L2Fsim/pilot/mcts/b03_node.hpp:42:5: warning:   when initialized here [-Wreorder]
     b03_node(
     ^~~~~~~~
./L2Fsim/pilot/mcts/b03_node.hpp: In constructor ‘L2Fsim::b03_node::b03_node(std::vector<L2Fsim::beeler_glider_command>, double, unsigned int, unsigned int)’:
./L2Fsim/pilot/mcts/b03_node.hpp:38:40: warning: ‘L2Fsim::b03_node::expendable_actions’ will be initialized after [-Wreorder]
     std::vector<beeler_glider_command> expendable_actions;
                                        ^~~~~~~~~~~~~~~~~~
./L2Fsim/pilot/mcts/b03_node.hpp:34:12: warning:   ‘double L2Fsim::b03_node::cumulative_reward’ [-Wreorder]
     double cumulative_reward;
            ^~~~~~~~~~~~~~~~~
./L2Fsim/pilot/mcts/b03_node.hpp:56:5: warning:   when initialized here [-Wreorder]
     b03_node(
     ^~~~~~~~
In file included from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:5:0,
                 from ./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:9,
                 from demo/main.cpp:10:
./L2Fsim/flight_zone/flat_zone.hpp: At global scope:
./L2Fsim/flight_zone/flat_zone.hpp:37:88: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                                                                        ^
./L2Fsim/flight_zone/flat_zone.hpp: In member function ‘virtual L2Fsim::flat_zone& L2Fsim::flat_zone::wind(double, double, double, double, std::vector<double>&)’:
./L2Fsim/flight_zone/flat_zone.hpp:37:33: warning: unused parameter ‘x’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                 ^
./L2Fsim/flight_zone/flat_zone.hpp:37:43: warning: unused parameter ‘y’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                           ^
./L2Fsim/flight_zone/flat_zone.hpp:37:53: warning: unused parameter ‘z’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                                     ^
./L2Fsim/flight_zone/flat_zone.hpp:37:63: warning: unused parameter ‘t’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                                               ^
In file included from ./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:9:0,
                 from demo/main.cpp:10:
./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp: At global scope:
./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:35:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double tstart=0.;
                   ^~
In file included from demo/main.cpp:10:0:
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:262:43: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  pilot & operator()(state &_s, command &_a) override
                                           ^
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:307:48: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
     pilot & out_of_range(state &_s, command &_a) override
                                                ^
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:27:7: error: looser throw specifier for ‘virtual L2Fsim::b03_uct_pilot::~b03_uct_pilot()’
 class b03_uct_pilot : public pilot {
       ^~~~~~~~~~~~~
In file included from ./L2Fsim/stepper/stepper.hpp:6:0,
                 from ./L2Fsim/simulation.hpp:6,
                 from demo/main.cpp:1:
./L2Fsim/pilot/pilot.hpp:11:13: error:   overriding ‘virtual L2Fsim::pilot::~pilot() throw ()’
     virtual ~pilot() = default;
             ^
In file included from demo/main.cpp:10:0:
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp: In constructor ‘L2Fsim::b03_uct_pilot::b03_uct_pilot(void (*)(L2Fsim::aircraft&, L2Fsim::flight_zone&, double&, const double&, const double&), L2Fsim::beeler_glider, L2Fsim::flat_thermal_soaring_zone, double, double, double, double, double, unsigned int, unsigned int)’:
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:44:100: warning: ‘L2Fsim::b03_uct_pilot::transition_function’ will be initialized after [-Wreorder]
     void (*transition_function)(aircraft &, flight_zone &, double &, const double &, const double &);
                                                                                                    ^
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:42:19: warning:   ‘L2Fsim::beeler_glider L2Fsim::b03_uct_pilot::ac’ [-Wreorder]
     beeler_glider ac;
                   ^~
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:53:5: warning:   when initialized here [-Wreorder]
     b03_uct_pilot(
     ^~~~~~~~~~~~~
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp: In member function ‘double L2Fsim::b03_uct_pilot::reward_model(const L2Fsim::beeler_glider_state&, const L2Fsim::beeler_glider_command&, const L2Fsim::beeler_glider_state&)’:
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:154:38: warning: unused parameter ‘a_t’ [-Wunused-parameter]
         const beeler_glider_command &a_t,
                                      ^~~
./L2Fsim/pilot/mcts/b03_uct_pilot.hpp:155:36: warning: unused parameter ‘s_tp’ [-Wunused-parameter]
         const beeler_glider_state &s_tp)
                                    ^~~~
In file included from demo/main.cpp:15:0:
./L2Fsim/stepper/euler_integrator.hpp: At global scope:
./L2Fsim/stepper/euler_integrator.hpp:19:34: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     std::string state_log_path = "data/state.dat";
                                  ^~~~~~~~~~~~~~~~
./L2Fsim/stepper/euler_integrator.hpp:20:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     std::string wind_log_path = "data/wind.dat";
                                 ^~~~~~~~~~~~~~~
In file included from demo/main.cpp:15:0:
./L2Fsim/stepper/euler_integrator.hpp:66:38: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
         const double &time_step_width) override
                                      ^
In file included from demo/main.cpp:15:0:
./L2Fsim/stepper/euler_integrator.hpp:11:7: error: looser throw specifier for ‘virtual L2Fsim::euler_integrator::~euler_integrator()’
 class euler_integrator : public stepper {
       ^~~~~~~~~~~~~~~~
In file included from ./L2Fsim/simulation.hpp:6:0,
                 from demo/main.cpp:1:
./L2Fsim/stepper/stepper.hpp:12:13: error:   overriding ‘virtual L2Fsim::stepper::~stepper() throw ()’
     virtual ~stepper() = default;
             ^
In file included from demo/main.cpp:16:0:
./L2Fsim/stepper/rk4_integrator.hpp:19:34: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     std::string state_log_path = "data/state.dat";
                                  ^~~~~~~~~~~~~~~~
./L2Fsim/stepper/rk4_integrator.hpp:20:33: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     std::string wind_log_path = "data/wind.dat";
                                 ^~~~~~~~~~~~~~~
In file included from demo/main.cpp:16:0:
./L2Fsim/stepper/rk4_integrator.hpp:93:38: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
         const double &time_step_width) override
                                      ^
In file included from demo/main.cpp:16:0:
./L2Fsim/stepper/rk4_integrator.hpp:11:7: error: looser throw specifier for ‘virtual L2Fsim::rk4_integrator::~rk4_integrator()’
 class rk4_integrator : public stepper {
       ^~~~~~~~~~~~~~
In file included from ./L2Fsim/simulation.hpp:6:0,
                 from demo/main.cpp:1:
./L2Fsim/stepper/stepper.hpp:12:13: error:   overriding ‘virtual L2Fsim::stepper::~stepper() throw ()’
     virtual ~stepper() = default;
             ^
demo/main.cpp: In function ‘int main()’:
demo/main.cpp:176:9: warning: deleting object of abstract class type ‘L2Fsim::flight_zone’ which has non-virtual destructor will cause undefined behavior [-Wdelete-non-virtual-dtor]
  delete my_zone;
         ^~~~~~~
demo/main.cpp:142:12: warning: unused variable ‘ep’ [-Wunused-variable]
     double ep=1e-2, lr=1e-3;
            ^~
demo/main.cpp:142:21: warning: unused variable ‘lr’ [-Wunused-variable]
     double ep=1e-2, lr=1e-3;
                     ^~
demo/main.cpp:143:12: warning: unused variable ‘df’ [-Wunused-variable]
     double df=.9;
            ^~
demo/main.cpp:144:12: warning: unused variable ‘uct_parameter’ [-Wunused-variable]
     double uct_parameter = 1./sqrt(2.);
            ^~~~~~~~~~~~~
demo/main.cpp:145:24: warning: unused variable ‘uct_stsw’ [-Wunused-variable]
     double uct_tsw=2., uct_stsw=uct_tsw/1.;
                        ^~~~~~~~
demo/main.cpp:146:18: warning: unused variable ‘horizon’ [-Wunused-variable]
     unsigned int horizon=100, computational_budget=10000;
                  ^~~~~~~
demo/main.cpp:146:31: warning: unused variable ‘computational_budget’ [-Wunused-variable]
     unsigned int horizon=100, computational_budget=10000;
                               ^~~~~~~~~~~~~~~~~~~~
demo/main.cpp: In function ‘L2Fsim::flight_zone* read_environment_variables()’:
demo/main.cpp:66:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
In file included from /usr/include/c++/6.3.1/random:35:0,
                 from ./L2Fsim/utils/utils.hpp:8,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:6,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
/usr/include/c++/6.3.1/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
 #error This file requires compiler and library support \
  ^~~~~
In file included from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:4:0,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
./L2Fsim/flight_zone/flight_zone.hpp: In member function ‘L2Fsim::flight_zone& L2Fsim::flight_zone::ground(double, double, double&)’:
./L2Fsim/flight_zone/flight_zone.hpp:42:32: warning: unused parameter ‘x’ [-Wunused-parameter]
     flight_zone& ground(double x, double y, double &z)
                                ^
./L2Fsim/flight_zone/flight_zone.hpp:42:42: warning: unused parameter ‘y’ [-Wunused-parameter]
     flight_zone& ground(double x, double y, double &z)
                                          ^
In file included from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:5:0,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
./L2Fsim/flight_zone/flat_zone.hpp: At global scope:
./L2Fsim/flight_zone/flat_zone.hpp:37:88: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                                                                        ^
./L2Fsim/flight_zone/flat_zone.hpp: In member function ‘virtual L2Fsim::flat_zone& L2Fsim::flat_zone::wind(double, double, double, double, std::vector<double>&)’:
./L2Fsim/flight_zone/flat_zone.hpp:37:33: warning: unused parameter ‘x’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                 ^
./L2Fsim/flight_zone/flat_zone.hpp:37:43: warning: unused parameter ‘y’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                           ^
./L2Fsim/flight_zone/flat_zone.hpp:37:53: warning: unused parameter ‘z’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                                     ^
./L2Fsim/flight_zone/flat_zone.hpp:37:63: warning: unused parameter ‘t’ [-Wunused-parameter]
  virtual flat_zone& wind(double x, double y, double z, double t, std::vector<double> &w) override {
                                                               ^
In file included from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5:0,
                 from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:6,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
./L2Fsim/utils/utils.hpp: In function ‘void L2Fsim::save_vector(const std::vector<content_type>&, const string&, std::ios_base::openmode)’:
./L2Fsim/utils/utils.hpp:127:27: error: no matching function for call to ‘std::basic_ofstream<char>::open(const string&, std::ios_base::openmode&)’
     outfile.open(path,mode);
                           ^
In file included from ./L2Fsim/utils/utils.hpp:9:0,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:6,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
/usr/include/c++/6.3.1/fstream:799:7: note: candidate: void std::basic_ofstream<_CharT, _Traits>::open(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode]
       open(const char* __s,
       ^~~~
/usr/include/c++/6.3.1/fstream:799:7: note:   no known conversion for argument 1 from ‘const string {aka const std::__cxx11::basic_string<char>}’ to ‘const char*’
In file included from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:0:
./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp: At global scope:
./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:35:19: warning: non-static data member initializers only available with -std=c++11 or -std=gnu++11
     double tstart=0.;
                   ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In constructor ‘L2Fsim::flat_thermal_soaring_zone::flat_thermal_soaring_zone(std::__cxx11::string)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:45:27: error: no matching function for call to ‘std::basic_ifstream<char>::basic_ifstream(std::__cxx11::string&)’
     ifstream file(filename);
                           ^
In file included from ./L2Fsim/utils/utils.hpp:9:0,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:6,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
/usr/include/c++/6.3.1/fstream:495:7: note: candidate: std::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode]
       basic_ifstream(const char* __s, ios_base::openmode __mode = ios_base::in)
       ^~~~~~~~~~~~~~
/usr/include/c++/6.3.1/fstream:495:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’
/usr/include/c++/6.3.1/fstream:481:7: note: candidate: std::basic_ifstream<_CharT, _Traits>::basic_ifstream() [with _CharT = char; _Traits = std::char_traits<char>]
       basic_ifstream() : __istream_type(), _M_filebuf()
       ^~~~~~~~~~~~~~
/usr/include/c++/6.3.1/fstream:481:7: note:   candidate expects 0 arguments, 1 provided
/usr/include/c++/6.3.1/fstream:455:11: note: candidate: std::basic_ifstream<char>::basic_ifstream(const std::basic_ifstream<char>&)
     class basic_ifstream : public basic_istream<_CharT, _Traits>
           ^~~~~~~~~~~~~~
/usr/include/c++/6.3.1/fstream:455:11: note:   no known conversion for argument 1 from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const std::basic_ifstream<char>&’
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:86:9: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++11-compat]
     for(auto data: datavector)
         ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:86:14: error: ‘data’ does not name a type
     for(auto data: datavector)
              ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:93:5: error: expected ‘;’ before ‘cout’
     cout<<"Configurations read file : "<<filename<<" ; and thermals are created accordingly."<<endl;
     ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:94:1: error: expected primary-expression before ‘}’ token
 }
 ^
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:94:1: error: expected ‘)’ before ‘}’ token
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:94:1: error: expected primary-expression before ‘}’ token
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In member function ‘bool L2Fsim::flat_thermal_soaring_zone::createThermalCenter(std::vector<double>&, double)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:126:18: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++11-compat]
              for(auto& th:thermals)
                  ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:126:24: error: ISO C++ forbids declaration of ‘th’ with no type [-fpermissive]
              for(auto& th:thermals)
                        ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:126:27: warning: range-based ‘for’ loops only available with -std=c++11 or -std=gnu++11
              for(auto& th:thermals)
                           ^~~~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:128:24: error: base operand of ‘->’ is not a pointer
                  if (th->isAlive(t)){
                        ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:129:26: error: base operand of ‘->’ is not a pointer
                  dist+=th->distToUpdraftCenter(x,y,0.);
                          ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:131:29: error: base operand of ‘->’ is not a pointer
                  sqrt( (x-th->getCenter()[0])*(x-th->getCenter()[0])
                             ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:131:52: error: base operand of ‘->’ is not a pointer
                  sqrt( (x-th->getCenter()[0])*(x-th->getCenter()[0])
                                                    ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:132:29: error: base operand of ‘->’ is not a pointer
                       +(y-th->getCenter()[1])*(y-th->getCenter()[1]))
                             ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:132:52: error: base operand of ‘->’ is not a pointer
                       +(y-th->getCenter()[1])*(y-th->getCenter()[1]))
                                                    ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:165:13: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++11-compat]
         for(auto& th: thermals)
             ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:165:19: error: ISO C++ forbids declaration of ‘th’ with no type [-fpermissive]
         for(auto& th: thermals)
                   ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:165:23: warning: range-based ‘for’ loops only available with -std=c++11 or -std=gnu++11
         for(auto& th: thermals)
                       ^~~~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:167:18: error: base operand of ‘->’ is not a pointer
             if(th->isAlive(t))
                  ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:170:36: error: base operand of ‘->’ is not a pointer
                 sqrt((newCenterX-th->getCenter()[0])*(newCenterX-th->getCenter()[0])
                                    ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:170:68: error: base operand of ‘->’ is not a pointer
                 sqrt((newCenterX-th->getCenter()[0])*(newCenterX-th->getCenter()[0])
                                                                    ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:171:37: error: base operand of ‘->’ is not a pointer
                      +(newCenterY-th->getCenter()[1])*(newCenterY-th->getCenter()[1]))
                                     ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:171:69: error: base operand of ‘->’ is not a pointer
                      +(newCenterY-th->getCenter()[1])*(newCenterY-th->getCenter()[1]))
                                                                     ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In member function ‘int L2Fsim::flat_thermal_soaring_zone::numberAliveAtTime(double)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:193:19: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i=0; i<thermals.size();i++)
                  ~^~~~~~~~~~~~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In member function ‘double L2Fsim::flat_thermal_soaring_zone::environSink(double, double)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:211:9: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++11-compat]
     for(auto th: thermals)
         ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:211:14: error: ‘th’ does not name a type
     for(auto th: thermals)
              ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:223:5: error: expected ‘;’ before ‘w_e’
     w_e = - massFlowTh / (regX*regY - areaTh);
     ^~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:223:45: warning: suggest parentheses around assignment used as truth value [-Wparentheses]
     w_e = - massFlowTh / (regX*regY - areaTh);
                                             ^
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:225:5: error: expected primary-expression before ‘if’
     if(w_e>0.0){w_e=0.0;}
     ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:225:5: error: expected ‘)’ before ‘if’
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:208:12: warning: unused variable ‘avgUpdraft’ [-Wunused-variable]
     double avgUpdraft,radius,swd;
            ^~~~~~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:208:23: warning: unused variable ‘radius’ [-Wunused-variable]
     double avgUpdraft,radius,swd;
                       ^~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:208:30: warning: unused variable ‘swd’ [-Wunused-variable]
     double avgUpdraft,radius,swd;
                              ^~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:205:54: warning: unused parameter ‘z’ [-Wunused-parameter]
 double flat_thermal_soaring_zone::environSink(double z, double t)
                                                      ^
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:205:64: warning: unused parameter ‘t’ [-Wunused-parameter]
 double flat_thermal_soaring_zone::environSink(double z, double t)
                                                                ^
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In member function ‘virtual L2Fsim::flat_thermal_soaring_zone& L2Fsim::flat_thermal_soaring_zone::wind(double, double, double, double, std::vector<double>&)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:247:9: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++11-compat]
     for(auto& therm: thermals) {
         ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:247:15: error: ISO C++ forbids declaration of ‘therm’ with no type [-fpermissive]
     for(auto& therm: thermals) {
               ^~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:247:22: warning: range-based ‘for’ loops only available with -std=c++11 or -std=gnu++11
     for(auto& therm: thermals) {
                      ^~~~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:248:17: error: base operand of ‘->’ is not a pointer
         if(therm->isAlive(t)) {
                 ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:249:18: error: base operand of ‘->’ is not a pointer
             therm->wind(x,y,z,t,w);
                  ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In member function ‘void L2Fsim::flat_thermal_soaring_zone::writeScenario(double, double, double, double, std::__cxx11::string)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:306:24: error: no matching function for call to ‘std::basic_ofstream<char>::open(std::__cxx11::string&)’
     file.open (filename);
                        ^
In file included from ./L2Fsim/utils/utils.hpp:9:0,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:6,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
/usr/include/c++/6.3.1/fstream:799:7: note: candidate: void std::basic_ofstream<_CharT, _Traits>::open(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode]
       open(const char* __s,
       ^~~~
/usr/include/c++/6.3.1/fstream:799:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In member function ‘void L2Fsim::flat_thermal_soaring_zone::saveConfig(std::__cxx11::string)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:343:26: error: no matching function for call to ‘std::basic_ofstream<char>::open(std::__cxx11::string&)’
     myfile.open (filename);
                          ^
In file included from ./L2Fsim/utils/utils.hpp:9:0,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:6,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
/usr/include/c++/6.3.1/fstream:799:7: note: candidate: void std::basic_ofstream<_CharT, _Traits>::open(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode]
       open(const char* __s,
       ^~~~
/usr/include/c++/6.3.1/fstream:799:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:360:9: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++11-compat]
     for(auto th: thermals)
         ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:360:14: error: ‘th’ does not name a type
     for(auto th: thermals)
              ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:364:5: error: expected ‘;’ before ‘myfile’
     myfile.close();
     ^~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:364:17: error: could not convert ‘myfile.std::basic_ofstream<_CharT, _Traits>::close<char, std::char_traits<char> >()’ from ‘void’ to ‘bool’
     myfile.close();
     ~~~~~~~~~~~~^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:365:1: error: expected primary-expression before ‘}’ token
 }
 ^
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:365:1: error: expected ‘)’ before ‘}’ token
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:365:1: error: expected primary-expression before ‘}’ token
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp: In member function ‘void L2Fsim::flat_thermal_soaring_zone::saveConfigToCSV(std::__cxx11::string)’:
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:374:25: error: no matching function for call to ‘std::basic_ofstream<char>::open(std::__cxx11::string&)’
     myfile.open(filename);
                         ^
In file included from ./L2Fsim/utils/utils.hpp:9:0,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from ./L2Fsim/flight_zone/flat_thermal_soaring_zone.hpp:6,
                 from L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:1:
/usr/include/c++/6.3.1/fstream:799:7: note: candidate: void std::basic_ofstream<_CharT, _Traits>::open(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode]
       open(const char* __s,
       ^~~~
/usr/include/c++/6.3.1/fstream:799:7: note:   no known conversion for argument 1 from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:377:9: warning: ‘auto’ changes meaning in C++11; please remove it [-Wc++11-compat]
     for(auto th: thermals)
         ^~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:377:14: error: ‘th’ does not name a type
     for(auto th: thermals)
              ^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:381:5: error: expected ‘;’ before ‘myfile’
     myfile.close();
     ^~~~~~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:381:17: error: could not convert ‘myfile.std::basic_ofstream<_CharT, _Traits>::close<char, std::char_traits<char> >()’ from ‘void’ to ‘bool’
     myfile.close();
     ~~~~~~~~~~~~^~
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:382:1: error: expected primary-expression before ‘}’ token
 }
 ^
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:382:1: error: expected ‘)’ before ‘}’ token
L2Fsim/flight_zone/flat_thermal_soaring_zone.cpp:382:1: error: expected primary-expression before ‘}’ token
In file included from /usr/include/c++/6.3.1/random:35:0,
                 from ./L2Fsim/utils/utils.hpp:8,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from L2Fsim/flight_zone/thermal/std_thermal.cpp:1:
/usr/include/c++/6.3.1/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
 #error This file requires compiler and library support \
  ^~~~~
In file included from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5:0,
                 from L2Fsim/flight_zone/thermal/std_thermal.cpp:1:
./L2Fsim/utils/utils.hpp: In function ‘void L2Fsim::save_vector(const std::vector<content_type>&, const string&, std::ios_base::openmode)’:
./L2Fsim/utils/utils.hpp:127:27: error: no matching function for call to ‘std::basic_ofstream<char>::open(const string&, std::ios_base::openmode&)’
     outfile.open(path,mode);
                           ^
In file included from ./L2Fsim/utils/utils.hpp:9:0,
                 from ./L2Fsim/flight_zone/thermal/std_thermal.hpp:5,
                 from L2Fsim/flight_zone/thermal/std_thermal.cpp:1:
/usr/include/c++/6.3.1/fstream:799:7: note: candidate: void std::basic_ofstream<_CharT, _Traits>::open(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode]
       open(const char* __s,
       ^~~~
/usr/include/c++/6.3.1/fstream:799:7: note:   no known conversion for argument 1 from ‘const string {aka const std::__cxx11::basic_string<char>}’ to ‘const char*’
L2Fsim/flight_zone/thermal/std_thermal.cpp: In member function ‘void L2Fsim::std_thermal::Lawrance(std::vector<double>&, double, double, double, double, double, double)’:
L2Fsim/flight_zone/thermal/std_thermal.cpp:367:83: warning: unused parameter ‘t’ [-Wunused-parameter]
 void std_thermal::Lawrance(vector<double> &w,double x, double y, double z, double t,double Wx,double Wy)
                                                                                   ^
L2Fsim/flight_zone/thermal/std_thermal.cpp:367:92: warning: unused parameter ‘Wx’ [-Wunused-parameter]
 void std_thermal::Lawrance(vector<double> &w,double x, double y, double z, double t,double Wx,double Wy)
                                                                                            ^~
L2Fsim/flight_zone/thermal/std_thermal.cpp:367:102: warning: unused parameter ‘Wy’ [-Wunused-parameter]
 void std_thermal::Lawrance(vector<double> &w,double x, double y, double z, double t,double Wx,double Wy)
                                                                                                      ^~
make: *** [compile] Error 1
